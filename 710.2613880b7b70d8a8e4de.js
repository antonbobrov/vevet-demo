"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[710],{710:function(s,t,e){var o=e(549),i=e(674);class r extends i.O{constructor(){super(...arguments),this._absDiff={x:0,y:0}}_getDefaultProps(){return Object.assign(Object.assign({},super._getDefaultProps()),{disablePointerEventsAt:!1})}get stepCoords(){return{x:this.coords.x-this.prevCoords.x,y:this.coords.y-this.prevCoords.y}}get diffCoords(){return{x:this.coords.x-this.startCoords.x,y:this.coords.y-this.startCoords.y}}get absDiff(){return this._absDiff}_addRuntimeEvents(){super._addRuntimeEvents();const{isPassive:s}=this.props;this._runtimeListeners.push((0,o.q)(window,"mousemove",(s=>{"mouse"===this.type&&this._handleMove(s)}),{passive:s})),this._runtimeListeners.push((0,o.q)(window,"touchmove",(s=>{"touch"===this.type&&this._handleMove(s)}),{passive:s}))}_handleMove(s){const{x:t,y:e,pointerId:o}=this._getEventCoords(s);return!(!this.isDragging||o!==this.pointerID||(this.prevCoords={x:this.coords.x,y:this.coords.y},this.coords={x:t,y:e},this._absDiff.x+=Math.abs(this.stepCoords.x),this._absDiff.y+=Math.abs(this.stepCoords.y),this._togglePointerEvents(!1),this.callbacks.tbt("move",{event:s,start:this.startCoords,coords:this.coords,step:this.stepCoords,diff:this.diffCoords,absDiff:this.absDiff}),0))}_handleEnd(s){super._handleEnd(s),this._absDiff={x:0,y:0},this._togglePointerEvents(!0)}_togglePointerEvents(s){if("number"!=typeof this.props.disablePointerEventsAt)return;if(!(this.container instanceof HTMLElement))return;const t=Math.abs(this.diffCoords.x)<this.props.disablePointerEventsAt&&Math.abs(this.diffCoords.y)<this.props.disablePointerEventsAt||s;this.container.style.pointerEvents=t?"":"none"}_destroy(){super._destroy()}}var n=document.getElementById("thumb"),a=new r({container:n});a.addCallback("move",(function(s){var t=s.diff;n.style.transition="",n.style.transform="translate(".concat(t.x,"px, ").concat(t.y,"px)")})),a.addCallback("end",(function(){n.style.transition="transform 0.35s",n.style.transform=""}))}}]);